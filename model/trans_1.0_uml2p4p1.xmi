<?xml version="1.0" encoding="UTF-8"?><xmi:XMI xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:IVOA_UML_Profile="http:///schemas/IVOA_UML_Profile/_-eTuwNXSEeqknuIFRWC1TQ/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.omg.org/spec/UML/20110701" xmi:version="2.1" xsi:schemaLocation="http://www.eclipse.org/uml2/3.0.0/UML http://schema.omg.org/spec/UML/20110701 http:///schemas/IVOA_UML_Profile/_-eTuwNXSEeqknuIFRWC1TQ/0 IVOA_UML_Profile.profile.xmi#_-fWQl9XSEeqknuIFRWC1TQ">
  <uml:Model xmi:id="_-eJ9wNXSEeqknuIFRWC1TQ" name="trans">
    <eAnnotations xmi:id="_-eJ9wdXSEeqknuIFRWC1TQ" source="Objing">
      <contents xmi:type="uml:Property" xmi:id="_-eJ9wtXSEeqknuIFRWC1TQ" name="exporterVersion">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_-eJ9w9XSEeqknuIFRWC1TQ" value="3.0.0"/>
      </contents>
    </eAnnotations>
    <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9xNXSEeqknuIFRWC1TQ">
      <body>The transform model defines objects which can be used to construct expressions representing the relation between two coordinate systems.  These may be used to transform coordinates and other objects defined in one coordinate system into corresponding objects in another coordinate system.  There are two primary components to the model, the "Mapping", and the "TransformSet".

The "Mapping" object defines how to transform a set of "input" scalar values into a corresponding set of "output" scalar values.   The Mapping supports transforms in either direction via "operations" which we refer to as the forward and inverse operations.  The forward operation transforms the mapping inputs into mapping outputs.  The inverse operation transforms the mapping outputs into mapping inputs.  

The "TransformSet" object gives physical context to the "Mapping" by relating a parent coordinate system to a target coordinate system via a Mapping.  The TransformSet model structure allows for the association of groups of inter-related coordinate systems.

Since a mapping expression can involve multiple steps between end points, we separate these features, such that the Mapping provides the path, and the TransformSet associates a Mapping with its source and target coordinate systems.
</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_-eJ9xdXSEeqknuIFRWC1TQ" constrainedElement="_-eJ-TdXSEeqknuIFRWC1TQ">
      <specification xmi:type="uml:LiteralString" xmi:id="_-eJ9xtXSEeqknuIFRWC1TQ" value="element maxlength = M*N"/>
    </ownedRule>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_-eJ9x9XSEeqknuIFRWC1TQ" name="WCS Transform Model V1.0"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ9yNXSEeqknuIFRWC1TQ" name="Mapping" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9ydXSEeqknuIFRWC1TQ">
        <body>The "Mapping" object defines how to transform a set of "input" scalar values into a corresponding set of "output" scalar values.   The Mapping supports transforms in either direction via "operations" which we refer to here as the forward and inverse operations.  The forward operation transforms the mapping inputs into mapping outputs.  The inverse operation transforms the mapping outputs into mapping inputs.  

There is possibility here for confusion regarding the meaning of the words "input" and "output". A clear distinction should be drawn between the inputs and outputs of a mapping and those of an operation.  The inputs and outputs of a mapping are the same as the inputs and outputs of the mapping's forward operation, but are the reverse of the inputs and outputs of the mapping's inverse operation. Thus, the inputs of the inverse operation are the outputs of the mapping, etc.

Note, a mapping may in principle be inverted, but an operation cannot be inverted.  Inverting a mapping means reversing the roles performed by its two operation - the original inverse operation is used as the new forward operation, and vice-versa.

We could support both forward and inverse operations by defining entirely separate expressions to describe the two transformations.  However, that approach is bulky and requires more maintanence as any change to one object would require equivalent changes be made to the other.  Since many operations have a natural inverse, a safer, more compact and flexible approach is to use a single object to describe both transformations.  With this approach, a change to the one transform automatically applies to both directions.

This model leverages this compact approach, defining mappings with sufficient information to support both forward and inverse operations.   Many mappings, such as shift, and rotation, have an analytical inverse, and both operations can be supported by a single set of parameters.  For others, like polynomial, this is not true and so one of the two operations may be undefined.  The BiDirectionalMap may be used to explicitely assign a different mapping for each direction.

In this model, we describe three flavors of mappings which allow specifications from very simple relations to arbitrarily complex relations built from a set of component mappings:
   * Atomic Mappings which perform a single arithmatic operation 
   * BiDirectional Mapping with explicit specification of the mapping in the forward and inverse direction
   * Compound Mappings which are used to control the workflow and build arbitrarily complex operations


</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ9ytXSEeqknuIFRWC1TQ" name="invert" visibility="public" type="_-eKlE9XSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9y9XSEeqknuIFRWC1TQ">
          <body>Boolean flag indicates that the Mapping content defines its inverse operation rather than its forward operation and so the Mapping should be inverted before being used. In other words, the forward operation of the Mapping should be implemented using the inverse operation implied by the Mapping's contents, and  vice versa.

For many operations, the inverse transformation can be directly derived from the forward transform.  For instance, the inverse of a transform that simply adds a constant to each input is a transform of the same type, with a negated constant.  However, there are potentially operations for which this cannot be done.  For instance, the inverse of a transform that maps 3D Cartesian coordinates to spherical coordinates cannot be expressed by the same algorithm.  This flag indicates that it should be used in its inverse sense.  

In addition, the invert flag allows a complex compound transformation to be be inverted simply by toggling its invert flag.  Without such a flag each component would need to be re-written to represent its inverse (if possible), and the order of serial transformations would need to be reversed - a much more complex and error prone process.
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eJ9zNXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ9zdXSEeqknuIFRWC1TQ" name="CompoundMap" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9ztXSEeqknuIFRWC1TQ">
        <body>Abstract class to facilitate the combination of Mappings in various ways.  Since they are themselves mappings, they can be used as a components in other compound mappings to create arbitrarily complex transform expressions.  
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ9z9XSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ90NXSEeqknuIFRWC1TQ" name="cptMap" visibility="public" type="_-eKleNXSEeqknuIFRWC1TQ" isOrdered="true" aggregation="composite" association="_-eJ909XSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ90dXSEeqknuIFRWC1TQ">
          <body>List of component mappings.  Joins multiple mappings together to form a single unit.  The interpretation of the list set depends on the particular sub-class of CompoundMap.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eJ90tXSEeqknuIFRWC1TQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eJ909XSEeqknuIFRWC1TQ" memberEnd="_-eJ90NXSEeqknuIFRWC1TQ _-eJ91NXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eJ91NXSEeqknuIFRWC1TQ" visibility="public" type="_-eJ9zdXSEeqknuIFRWC1TQ" association="_-eJ909XSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ91dXSEeqknuIFRWC1TQ" name="ComposeMap">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ91tXSEeqknuIFRWC1TQ">
        <body>Combines the component mappings in series. This allows the building of multi-stage transforms such as a Matrix operation followed by a WCS Projection.  When the invert flag is 'True', the forward operation of the ComposeMap is defined by the inverse of the content, iterating the component list in reverse order, executing the inverse operation of each component.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ919XSEeqknuIFRWC1TQ" general="_-eJ9zdXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ92NXSEeqknuIFRWC1TQ" name="ConcatenateMap">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ92dXSEeqknuIFRWC1TQ">
        <body>Combines the component mappings in parallel. This enables the building of a mapping which covers the full dimension space of the input. Axes are distributed to the component mappings in order. For example, to perform a shift on a 2-dimensional coordinate (x,y), one would join two Shift maps giving the offset in x and y respectively. 
When the 'invert' flag is True, the forward operation of the ConcatenateMap is defined by applying the inverse operations of the component mappings.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ92tXSEeqknuIFRWC1TQ" general="_-eJ9zdXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_-eJ929XSEeqknuIFRWC1TQ" name="InterpolationMethod">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ93NXSEeqknuIFRWC1TQ">
        <body>Enumeration of interpolation methods to control the interpretation of data between known points in operations such as Lookup.</body>
      </ownedComment>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ93dXSEeqknuIFRWC1TQ" name="None">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ93tXSEeqknuIFRWC1TQ">
          <body>No interpolation method specified, interpretation between points is undefined.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ939XSEeqknuIFRWC1TQ" name="Nearest">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ94NXSEeqknuIFRWC1TQ">
          <body>Nearest neighbor is selected</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ94dXSEeqknuIFRWC1TQ" name="Linear">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ94tXSEeqknuIFRWC1TQ">
          <body>Assume a linear progression between points.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ949XSEeqknuIFRWC1TQ" name="Spline">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ95NXSEeqknuIFRWC1TQ">
          <body>Perform a spline interpolation through the points.  2-dimensional only.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_-eJ95dXSEeqknuIFRWC1TQ" name="SkyProjectionType">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ95tXSEeqknuIFRWC1TQ">
        <body>Enumeration of non-linear celestial projection algorithm codes as listed in Table 13 of the FITS WCS paper II.</body>
      </ownedComment>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ959XSEeqknuIFRWC1TQ" name="AZP">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ96NXSEeqknuIFRWC1TQ">
          <body>Zenithal perspective</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ96dXSEeqknuIFRWC1TQ" name="SZP">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ96tXSEeqknuIFRWC1TQ">
          <body>Slant zenithal perspective</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ969XSEeqknuIFRWC1TQ" name="TAN">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ97NXSEeqknuIFRWC1TQ">
          <body>Gnomonic (Tangent plane projection)</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ97dXSEeqknuIFRWC1TQ" name="STG">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ97tXSEeqknuIFRWC1TQ">
          <body>Stereographic</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ979XSEeqknuIFRWC1TQ" name="SIN">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ98NXSEeqknuIFRWC1TQ">
          <body>Slant orthographic (Sine projection)</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ98dXSEeqknuIFRWC1TQ" name="ARC">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ98tXSEeqknuIFRWC1TQ">
          <body>Zenithal equidistant</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ989XSEeqknuIFRWC1TQ" name="ZPN">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ99NXSEeqknuIFRWC1TQ">
          <body>Zenithal polynomial</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ99dXSEeqknuIFRWC1TQ" name="ZEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ99tXSEeqknuIFRWC1TQ">
          <body>Zenithal equal-area</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ999XSEeqknuIFRWC1TQ" name="AIR">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9-NXSEeqknuIFRWC1TQ">
          <body>Airy</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ9-dXSEeqknuIFRWC1TQ" name="CYP">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9-tXSEeqknuIFRWC1TQ">
          <body>Cylindrical perspective</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ9-9XSEeqknuIFRWC1TQ" name="CEA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9_NXSEeqknuIFRWC1TQ">
          <body>Cylindrical equal-area</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ9_dXSEeqknuIFRWC1TQ" name="CAR">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ9_tXSEeqknuIFRWC1TQ">
          <body>Plate carree</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ9_9XSEeqknuIFRWC1TQ" name="MER">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-ANXSEeqknuIFRWC1TQ">
          <body>Mercator</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-AdXSEeqknuIFRWC1TQ" name="SFL">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-AtXSEeqknuIFRWC1TQ">
          <body>Sanson-Flamsteed</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-A9XSEeqknuIFRWC1TQ" name="PAR">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-BNXSEeqknuIFRWC1TQ">
          <body>Parabolic</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-BdXSEeqknuIFRWC1TQ" name="MOL">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-BtXSEeqknuIFRWC1TQ">
          <body>Mollweide</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-B9XSEeqknuIFRWC1TQ" name="AIT">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-CNXSEeqknuIFRWC1TQ">
          <body>Hammer-Aitoff</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-CdXSEeqknuIFRWC1TQ" name="COP">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-CtXSEeqknuIFRWC1TQ">
          <body>Conic perspective</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-C9XSEeqknuIFRWC1TQ" name="COE">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-DNXSEeqknuIFRWC1TQ">
          <body>Conic equal-area</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-DdXSEeqknuIFRWC1TQ" name="COD">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-DtXSEeqknuIFRWC1TQ">
          <body>Conic equidistant</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-D9XSEeqknuIFRWC1TQ" name="COO">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-ENXSEeqknuIFRWC1TQ">
          <body>Conic orthomorphic</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-EdXSEeqknuIFRWC1TQ" name="BON">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-EtXSEeqknuIFRWC1TQ">
          <body>Bonne equal-area</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-E9XSEeqknuIFRWC1TQ" name="PCO">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-FNXSEeqknuIFRWC1TQ">
          <body>Polyconic</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-FdXSEeqknuIFRWC1TQ" name="TSC">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-FtXSEeqknuIFRWC1TQ">
          <body>Tangential spherical cube</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-F9XSEeqknuIFRWC1TQ" name="CSC">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-GNXSEeqknuIFRWC1TQ">
          <body>COBE Quadrilateralized spherical cube</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eJ-GdXSEeqknuIFRWC1TQ" name="QSC">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-GtXSEeqknuIFRWC1TQ">
          <body>Quadrilateralized spherical cube</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-G9XSEeqknuIFRWC1TQ" name="Permute">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-HNXSEeqknuIFRWC1TQ">
        <body>Permute the order and possibly number of dimensions between operations. This operation facilitates the workflow through the operation sequence. It is comprised of an ordered axismap list defining the output axis sequence in terms of the source (input) axes. It supports the reorder, duplication, and dropping of dimensions. 
   Reorder Example: We have a 3-dimensional coordinate (x,y,z) and wish to perform a 2-dimensional transform on the (x,z) plane. Define a Permute operation to reorder the axes from (x,y,z) to (y,x,z) using an axismap list specifying the new axis order, [2,1,3]. The results feed into the next step ( 1D + 2D operations ). 
   Duplicate Example: We have 2-dimensional coordinate (x,y) feeding two Polynomial2D operations to form (x',y'). Define a Permute operation with axismap list specifying sourceAxis set [1,2,1,2]. The result feeds into the next step ( Polynomial2D + Polynomial2D operations). 
   Drop Example: We have a 5-dimensional input feeding into a 3x3 Matrix operation. Define a Permute operation selecting the relevant axis set [1,3,5], the remaining axes, [2,4], are dropped. 
   Add Example: We have a 2-dimensional operation feeding into axes [1,3] of a 3-dimensional operation. Define a Permute operation with numSourceAxes=2; and sourceAxis set [1,0,2] where output axis 2 also specifies the fixed seed value.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-HdXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-HtXSEeqknuIFRWC1TQ" name="axismap" visibility="public" type="_-eJ-JtXSEeqknuIFRWC1TQ" isOrdered="true" aggregation="composite" association="_-eJ-JNXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-H9XSEeqknuIFRWC1TQ">
          <body>Ordered list defining the number and order of the resulting axis set.  Each entry provides the source (input) dimension for that output dimension.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eJ-INXSEeqknuIFRWC1TQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eJ-IdXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-ItXSEeqknuIFRWC1TQ" name="numSourceAxes" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-I9XSEeqknuIFRWC1TQ">
          <body>The number of input axes. Used to verify dimensional coverage in forward and inverse directions. For example, numSourceAxes=4 with axismap=[1,3] indicates that axes [2,4] have been dropped.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eJ-JNXSEeqknuIFRWC1TQ" memberEnd="_-eJ-HtXSEeqknuIFRWC1TQ _-eJ-JdXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eJ-JdXSEeqknuIFRWC1TQ" visibility="public" type="_-eJ-G9XSEeqknuIFRWC1TQ" association="_-eJ-JNXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-JtXSEeqknuIFRWC1TQ" name="PermuteAxis">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-J9XSEeqknuIFRWC1TQ">
        <body>Entry for the Permute operation, this object defines the mapping of input dimension to output dimension.  The output dimension is determined from its order in the axismap list.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-KNXSEeqknuIFRWC1TQ" name="sourceAxis" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-KdXSEeqknuIFRWC1TQ">
          <body>Source (input) dimension number, 1 based.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-KtXSEeqknuIFRWC1TQ" name="seedValue" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-K9XSEeqknuIFRWC1TQ">
          <body>Value to assign for the new dimensional axis.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eJ-LNXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-LdXSEeqknuIFRWC1TQ" name="Unit">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-LtXSEeqknuIFRWC1TQ">
        <body>A 1-Dimensional operation which makes no change to the inputs. ( X' = X )
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-L9XSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-MNXSEeqknuIFRWC1TQ" name="Shift">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-MdXSEeqknuIFRWC1TQ">
        <body>A 1-Dimensional operation defining a simple offset. ( X' = X + offset )
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-MtXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-M9XSEeqknuIFRWC1TQ" name="offset" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-NNXSEeqknuIFRWC1TQ">
          <body>The amount of offset to apply.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-NdXSEeqknuIFRWC1TQ" name="Scale">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-NtXSEeqknuIFRWC1TQ">
        <body>A 1-Dimensional operator for simple scaling. ( X' = factor*X )
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-N9XSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-ONXSEeqknuIFRWC1TQ" name="factor" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-OdXSEeqknuIFRWC1TQ">
          <body>The scale factor.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-OtXSEeqknuIFRWC1TQ" name="Rotate2D">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-O9XSEeqknuIFRWC1TQ">
        <body>A 2-Dimensional rotation operation.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-PNXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-PdXSEeqknuIFRWC1TQ" name="angle" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-PtXSEeqknuIFRWC1TQ">
          <body>Rotation angle, in degrees, from the positive direction of axis 1 toward the positive direction of axis 2.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-P9XSEeqknuIFRWC1TQ" name="EulerRotation">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-QNXSEeqknuIFRWC1TQ">
        <body>Defines a rotation operation in a 3-dimensional cartesian coordinate space, defined as a series of rotations about the native axes (x,y,z).
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-QdXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-QtXSEeqknuIFRWC1TQ" name="eulerAngle" visibility="public" type="_-eJ-R9XSEeqknuIFRWC1TQ" aggregation="composite" association="_-eJ-RdXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-Q9XSEeqknuIFRWC1TQ">
          <body>Rotation angle about a specified axis.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eJ-RNXSEeqknuIFRWC1TQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eJ-RdXSEeqknuIFRWC1TQ" memberEnd="_-eJ-QtXSEeqknuIFRWC1TQ _-eJ-RtXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eJ-RtXSEeqknuIFRWC1TQ" visibility="public" type="_-eJ-P9XSEeqknuIFRWC1TQ" association="_-eJ-RdXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-R9XSEeqknuIFRWC1TQ" name="EulerAngle">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-SNXSEeqknuIFRWC1TQ">
        <body>Angular rotation about a particular axis of a 3-dimensional cartesian coordinate space.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-SdXSEeqknuIFRWC1TQ" name="rotationAxis" visibility="public" type="_-eKlEdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-StXSEeqknuIFRWC1TQ">
          <body>Identifies the axis of rotation. MUST be 'x', 'y', or 'z'
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-S9XSEeqknuIFRWC1TQ" name="angle" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-TNXSEeqknuIFRWC1TQ">
          <body>Angle of rotation, in degrees. Angle sign follows the right-hand rule, where positive values indicate clockwise rotation (looking in +axis direction), negative values for counter-clockwise.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-TdXSEeqknuIFRWC1TQ" name="Matrix">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-TtXSEeqknuIFRWC1TQ">
        <body>An M x N matrix operation. Each cell of the matrix is provided by a MatrixElement object. Missing elements should be considered to equal 0.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-T9XSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-UNXSEeqknuIFRWC1TQ" name="element" visibility="public" type="_-eJ-WtXSEeqknuIFRWC1TQ" aggregation="composite" association="_-eJ-WNXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-UdXSEeqknuIFRWC1TQ">
          <body>Collection of MatrixElements which define each cell of the matrix. The total number of elements MUST NOT exceed M*N, any missing elements result in a cell with value=0.0.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eJ-UtXSEeqknuIFRWC1TQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eJ-U9XSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-VNXSEeqknuIFRWC1TQ" name="M" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-VdXSEeqknuIFRWC1TQ">
          <body>Number of rows in the matrix.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-VtXSEeqknuIFRWC1TQ" name="N" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-V9XSEeqknuIFRWC1TQ">
          <body>Number of columns in the matrix.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eJ-WNXSEeqknuIFRWC1TQ" memberEnd="_-eJ-UNXSEeqknuIFRWC1TQ _-eJ-WdXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eJ-WdXSEeqknuIFRWC1TQ" visibility="public" type="_-eJ-TdXSEeqknuIFRWC1TQ" association="_-eJ-WNXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-WtXSEeqknuIFRWC1TQ" name="MatrixElement">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-W9XSEeqknuIFRWC1TQ">
        <body>The value of cell m,n in an M x N matrix.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-XNXSEeqknuIFRWC1TQ" name="m" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-XdXSEeqknuIFRWC1TQ">
          <body>Matrix cell row number.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-XtXSEeqknuIFRWC1TQ" name="n" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-X9XSEeqknuIFRWC1TQ">
          <body>Matrix cell column number.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-YNXSEeqknuIFRWC1TQ" name="value" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-YdXSEeqknuIFRWC1TQ">
          <body>Matrix cell value.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-YtXSEeqknuIFRWC1TQ" name="Projection" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-Y9XSEeqknuIFRWC1TQ">
        <body>Abstract head of World Coordinate System (WCS) projection operations. We do not attempt to define the operations here, but instead, provide extensions which support the transforms described in the FITS WCS papers II and III.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-ZNXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-ZdXSEeqknuIFRWC1TQ" name="param" visibility="public" type="_-eJ-a9XSEeqknuIFRWC1TQ" aggregation="composite" association="_-eJ-adXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-ZtXSEeqknuIFRWC1TQ">
          <body>Set of 0 or more parameters providing supplemental metadata required to execute a particular projection algorithm. The number and meaning of the parameters depends on the algorithm. They are typically in the from of keyword/value pairs, so we provide a simple ProjectionParam element to accommodate these. The detailed content description is left to the WCS paper.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eJ-Z9XSEeqknuIFRWC1TQ" value="*"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eJ-aNXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eJ-adXSEeqknuIFRWC1TQ" memberEnd="_-eJ-ZdXSEeqknuIFRWC1TQ _-eJ-atXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eJ-atXSEeqknuIFRWC1TQ" visibility="public" type="_-eJ-YtXSEeqknuIFRWC1TQ" association="_-eJ-adXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-a9XSEeqknuIFRWC1TQ" name="ProjectionParam">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-bNXSEeqknuIFRWC1TQ">
        <body>Simple parameter specification for WCS Projections. The parameter is modeled as a simple name/value pair. The details of expectations for the various projection algorithms is left to the WCS paper describing the algorithm.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-bdXSEeqknuIFRWC1TQ" name="name" visibility="public" type="_-eKlEdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-btXSEeqknuIFRWC1TQ">
          <body>The parameter name as described in the WCS papers for each operation type.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-b9XSEeqknuIFRWC1TQ" name="value" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-cNXSEeqknuIFRWC1TQ">
          <body>The value for the parameter.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-cdXSEeqknuIFRWC1TQ" name="SkyProjection">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-ctXSEeqknuIFRWC1TQ">
        <body>This class corresponds to the Spherical Projection component of the FITS WCS paper II. As in the paper, this operation describes the mapping from the intermediate &amp;quot;Projection Plane&amp;quot; to the &amp;quot;Native Spherical&amp;quot; coordinate system. This model supports all defined projection types, where the appropriate code is specified in the algorithm attribute. All projection parameters are to be provided through the ProjectionParam list according to the descriptions given in the FITS WCS paper.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-c9XSEeqknuIFRWC1TQ" general="_-eJ-YtXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-dNXSEeqknuIFRWC1TQ" name="algorithm" visibility="public" type="_-eJ95dXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-ddXSEeqknuIFRWC1TQ">
          <body>The projection algorithm to apply. The value MUST be taken from the enumeration of standard sky projection algorithms. Extracted from &amp;#39;ctype&amp;#39; in the FITS WCS representations.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-dtXSEeqknuIFRWC1TQ" name="SkyProjRotate">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-d9XSEeqknuIFRWC1TQ">
        <body>This class extends SkyProjection to include the Spherical Rotation component of the FITS WCS paper II. This operation describes the mapping from the "Native Spherical" coordinate system to the "Celestial" coordinate system. The reference values are provided at the appropriate attribute, while all other parameters (e.g. LONPOLE, LATPOLE) are to be provided through the ProjectionParam list according to the descriptions given in the FITS WCS paper.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-eNXSEeqknuIFRWC1TQ" general="_-eJ-cdXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-edXSEeqknuIFRWC1TQ" name="referenceValue" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-etXSEeqknuIFRWC1TQ">
          <body>The target reference values in each dimension. Equivalent to 'crval' in FITS WCS representations.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eJ-e9XSEeqknuIFRWC1TQ" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eJ-fNXSEeqknuIFRWC1TQ" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-fdXSEeqknuIFRWC1TQ" name="SpectralProjection">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-ftXSEeqknuIFRWC1TQ">
        <body>This class represents a nonlinear one-dimensional spectral transform as detailed in the FITS WCS paper III.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-f9XSEeqknuIFRWC1TQ" general="_-eJ-YtXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-gNXSEeqknuIFRWC1TQ" name="referenceValue" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-gdXSEeqknuIFRWC1TQ">
          <body>The target reference value for the axis. Equivalent to 'crval' in FITS WCS representations.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-gtXSEeqknuIFRWC1TQ" name="algorithm" visibility="public" type="_-eKlI9XSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-g9XSEeqknuIFRWC1TQ">
          <body>The projection algorithm to apply. The value MUST be taken from the enumeration of non-linear spectral projection algorithms. Extracted from 'ctype' in FITS WCS representations.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-hNXSEeqknuIFRWC1TQ" name="coordType" visibility="public" type="_-eKlQ9XSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-hdXSEeqknuIFRWC1TQ">
          <body>The resulting spectral coordinate type code. Values MUST be taken from the enumerated list of spectral coordinate types. Extracted from 'ctype' in FITS WCS representations.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-htXSEeqknuIFRWC1TQ" name="Polynomial" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-h9XSEeqknuIFRWC1TQ">
        <body>Abstract head of a family of Polynomial distortion operations.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-iNXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-idXSEeqknuIFRWC1TQ" name="order" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-itXSEeqknuIFRWC1TQ">
          <body>The order, or degree, of the polynomial expression.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-i9XSEeqknuIFRWC1TQ" name="Polynomial1D">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-jNXSEeqknuIFRWC1TQ">
        <body>A 1-Dimensional Polynomial transform represented by the expression: X' = SUM( Ci*X**i), i=0..order. Each term is provided by a PolyCoeff1D object. Missing terms are considered to have a coefficient of 0.0.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eJ-jdXSEeqknuIFRWC1TQ" general="_-eJ-htXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-jtXSEeqknuIFRWC1TQ" name="term" visibility="public" type="_-eJ-k9XSEeqknuIFRWC1TQ" aggregation="composite" association="_-eJ-kdXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-j9XSEeqknuIFRWC1TQ">
          <body>A term in the polynomial expression.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eJ-kNXSEeqknuIFRWC1TQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eJ-kdXSEeqknuIFRWC1TQ" memberEnd="_-eJ-jtXSEeqknuIFRWC1TQ _-eJ-ktXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eJ-ktXSEeqknuIFRWC1TQ" visibility="public" type="_-eJ-i9XSEeqknuIFRWC1TQ" association="_-eJ-kdXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eJ-k9XSEeqknuIFRWC1TQ" name="PolyCoeff1D">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-lNXSEeqknuIFRWC1TQ">
        <body>A term of the polynomial expression. This object provides the coefficient (c) and power (p) of the term, forming the expression c*X**p.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-ldXSEeqknuIFRWC1TQ" name="coeff" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-ltXSEeqknuIFRWC1TQ">
          <body>Multiplicitive coefficient of the term.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eJ-l9XSEeqknuIFRWC1TQ" name="power" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eJ-mNXSEeqknuIFRWC1TQ">
          <body>The power to raise the value for this term.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKk0NXSEeqknuIFRWC1TQ" name="Polynomial2D">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk0dXSEeqknuIFRWC1TQ">
        <body>A 2-Dimensional Polynomial transform represented by the expression: X' = SUMi,j( Cij*X**i*Y**j), i+j&lt;=order. Each term is provided by a PolyCoeff2D object. Missing terms are considered to have a coefficient of 0.0.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eKk0tXSEeqknuIFRWC1TQ" general="_-eJ-htXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk09XSEeqknuIFRWC1TQ" name="term" visibility="public" type="_-eKk2NXSEeqknuIFRWC1TQ" aggregation="composite" association="_-eKk1tXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk1NXSEeqknuIFRWC1TQ">
          <body>A term in the polynomial expression.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eKk1dXSEeqknuIFRWC1TQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKk1tXSEeqknuIFRWC1TQ" memberEnd="_-eKk09XSEeqknuIFRWC1TQ _-eKk19XSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKk19XSEeqknuIFRWC1TQ" visibility="public" type="_-eKk0NXSEeqknuIFRWC1TQ" association="_-eKk1tXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKk2NXSEeqknuIFRWC1TQ" name="PolyCoeff2D">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk2dXSEeqknuIFRWC1TQ">
        <body>A term of the polynomial expression. This object provides the coefficient (c) and power (p) of the term, forming the expression c*X**p[0]*Y**p[1].</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk2tXSEeqknuIFRWC1TQ" name="coeff" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk29XSEeqknuIFRWC1TQ">
          <body>Multiplicitive coefficient of the term.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk3NXSEeqknuIFRWC1TQ" name="power" visibility="public" type="_-eKlEtXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk3dXSEeqknuIFRWC1TQ">
          <body>The power to raise the values for this term in each dimension.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eKk3tXSEeqknuIFRWC1TQ" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKk39XSEeqknuIFRWC1TQ" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKk4NXSEeqknuIFRWC1TQ" name="Lookup">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk4dXSEeqknuIFRWC1TQ">
        <body>Defines a lookup table operation. The Lookup is comprised of a series of value pairs (LookupEntry) which link specific points in the native system to corresponding points in the target system.  The 'interpolation' flag tells the user how to interpret data which falls between entries in the lookup table.  
All members of the series MUST be of the same type.  Lookup tables with StringEntry type content MUST have interpolation="None".  Handling Enumerated data: A common usage of a Lookup operation is to map image pixel index to an enumeration, such as a Polarization state. This can be handled by two means: 1) Define a numeric equivalent for each enumeration literal, and use NumericEntry types. Casting to the corresponding literal occurs outside of the operation. 2) Your local model can define a LookupEntry extension which maps the native value directly the target EnumerationLiteral. The details of either approach for particular enumerations is considered outside the scope of this document.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eKk4tXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk49XSEeqknuIFRWC1TQ" name="entry" visibility="public" type="_-eKk7tXSEeqknuIFRWC1TQ" isOrdered="true" aggregation="composite" association="_-eKk7NXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk5NXSEeqknuIFRWC1TQ">
          <body>Set of lookup table entries forming a discrete mapping from the native space to the target space.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eKk5dXSEeqknuIFRWC1TQ" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk5tXSEeqknuIFRWC1TQ" name="interpolation" visibility="public" type="_-eJ929XSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk59XSEeqknuIFRWC1TQ">
          <body>Specifies the form of interpolation, if any, prescribed to be performed.
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKk6NXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk6dXSEeqknuIFRWC1TQ" name="bounds_error" visibility="public" type="_-eKlE9XSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk6tXSEeqknuIFRWC1TQ">
          <body>Flag to specify behaviour outside the lookup table data bounds. True indicates an error condition, False indicates that the associated "fill" entry should be returned. If no "fill" entry is provided, the value should be extrapolated.
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKk69XSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKk7NXSEeqknuIFRWC1TQ" memberEnd="_-eKk49XSEeqknuIFRWC1TQ _-eKk7dXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKk7dXSEeqknuIFRWC1TQ" visibility="public" type="_-eKk4NXSEeqknuIFRWC1TQ" association="_-eKk7NXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKk7tXSEeqknuIFRWC1TQ" name="LookupEntry" isAbstract="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk79XSEeqknuIFRWC1TQ">
        <body>This is an abstract head of lookup table entry objects. Each entry provides a discrete translation of a 'native' value to the corresponding 'target' value.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk8NXSEeqknuIFRWC1TQ" name="fill" visibility="public" type="_-eKlE9XSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk8dXSEeqknuIFRWC1TQ">
          <body>When TRUE, the entry provides values to be used outside the Lookup table data domain. MUST only appear first or last in the sequence. If missing, it is considered to be FALSE.
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKk8tXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKk89XSEeqknuIFRWC1TQ" name="NumericEntry">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk9NXSEeqknuIFRWC1TQ">
        <body>A 1-Dimensional discrete mapping of numeric values.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eKk9dXSEeqknuIFRWC1TQ" general="_-eKk7tXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk9tXSEeqknuIFRWC1TQ" name="nativeValue" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk99XSEeqknuIFRWC1TQ">
          <body>The native, or reference, value of the lookup entry.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk-NXSEeqknuIFRWC1TQ" name="targetValue" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk-dXSEeqknuIFRWC1TQ">
          <body>The target, or resulting, value of the lookup entry.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKk-tXSEeqknuIFRWC1TQ" name="NumericEntry2D">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk-9XSEeqknuIFRWC1TQ">
        <body>A 2-Dimensional discrete mapping of numeric values.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eKk_NXSEeqknuIFRWC1TQ" general="_-eKk7tXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKk_dXSEeqknuIFRWC1TQ" name="nativeValue" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKk_tXSEeqknuIFRWC1TQ">
          <body>The native, or reference, value of the lookup entry.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eKk_9XSEeqknuIFRWC1TQ" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKlANXSEeqknuIFRWC1TQ" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlAdXSEeqknuIFRWC1TQ" name="targetValue" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlAtXSEeqknuIFRWC1TQ">
          <body>The target, or resulting, value of the lookup entry.
</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eKlA9XSEeqknuIFRWC1TQ" value="2"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKlBNXSEeqknuIFRWC1TQ" value="2"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKlBdXSEeqknuIFRWC1TQ" name="StringEntry">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlBtXSEeqknuIFRWC1TQ">
        <body>A 1-Dimensional discrete mapping of an integer counter to a corresponding string form. Since the result is non-numeric, a Lookup operation with StringEntry-s can only be used at the end of a Transform sequence.
</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eKlB9XSEeqknuIFRWC1TQ" general="_-eKk7tXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlCNXSEeqknuIFRWC1TQ" name="nativeValue" visibility="public" type="_-eKlFNXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlCdXSEeqknuIFRWC1TQ">
          <body>The native, or reference, value of the lookup entry.
</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlCtXSEeqknuIFRWC1TQ" name="targetValue" visibility="public" type="_-eKlEdXSEeqknuIFRWC1TQ" isUnique="false">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlC9XSEeqknuIFRWC1TQ">
          <body>The target, or resulting, value of the lookup entry.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-eKlDNXSEeqknuIFRWC1TQ" name="ivoa">
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlDdXSEeqknuIFRWC1TQ" name="real"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlDtXSEeqknuIFRWC1TQ" name="datetime"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlD9XSEeqknuIFRWC1TQ" name="anyURI">
        <generalization xmi:type="uml:Generalization" xmi:id="_-eKlENXSEeqknuIFRWC1TQ" general="_-eKlEdXSEeqknuIFRWC1TQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlEdXSEeqknuIFRWC1TQ" name="string"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlEtXSEeqknuIFRWC1TQ" name="nonnegativeInteger"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlE9XSEeqknuIFRWC1TQ" name="boolean"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlFNXSEeqknuIFRWC1TQ" name="integer"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlFdXSEeqknuIFRWC1TQ" name="rational"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlFtXSEeqknuIFRWC1TQ" name="complex"/>
      <packagedElement xmi:type="uml:InformationItem" xmi:id="_-eKlF9XSEeqknuIFRWC1TQ" name="IVOA Base Types V1.0 "/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_-eKlGNXSEeqknuIFRWC1TQ" name="Unit">
        <generalization xmi:type="uml:Generalization" xmi:id="_-eKlGdXSEeqknuIFRWC1TQ" general="_-eKlEdXSEeqknuIFRWC1TQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:DataType" xmi:id="_-eKlGtXSEeqknuIFRWC1TQ" name="Quantity" isAbstract="true">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlG9XSEeqknuIFRWC1TQ" name="unit" visibility="public" type="_-eKlGNXSEeqknuIFRWC1TQ" isUnique="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKlHNXSEeqknuIFRWC1TQ"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:DataType" xmi:id="_-eKlHdXSEeqknuIFRWC1TQ" name="IntegerQuantity">
        <generalization xmi:type="uml:Generalization" xmi:id="_-eKlHtXSEeqknuIFRWC1TQ" general="_-eKlGtXSEeqknuIFRWC1TQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlH9XSEeqknuIFRWC1TQ" name="value" visibility="public" type="_-eKlFNXSEeqknuIFRWC1TQ" isUnique="false"/>
      </packagedElement>
      <packagedElement xmi:type="uml:DataType" xmi:id="_-eKlINXSEeqknuIFRWC1TQ" name="RealQuantity">
        <generalization xmi:type="uml:Generalization" xmi:id="_-eKlIdXSEeqknuIFRWC1TQ" general="_-eKlGtXSEeqknuIFRWC1TQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlItXSEeqknuIFRWC1TQ" name="value" visibility="public" type="_-eKlDdXSEeqknuIFRWC1TQ" isUnique="false"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_-eKlI9XSEeqknuIFRWC1TQ" name="SpectralProjectionType">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlJNXSEeqknuIFRWC1TQ">
        <body>Enumeration of non-linear spectral projection algorithm codes as listed in Table 2 of the FITS WCS paper III.
NOTE: We exclude the TAB code from this list, that type is handled by the Lookup operation in this model.
</body>
      </ownedComment>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlJdXSEeqknuIFRWC1TQ" name="F2W">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlJtXSEeqknuIFRWC1TQ">
          <body>Frequency - Wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlJ9XSEeqknuIFRWC1TQ" name="F2V">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlKNXSEeqknuIFRWC1TQ">
          <body>Frequency - Apparent radial velocity</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlKdXSEeqknuIFRWC1TQ" name="F2A">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlKtXSEeqknuIFRWC1TQ">
          <body>Frequency - Air wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlK9XSEeqknuIFRWC1TQ" name="W2F">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlLNXSEeqknuIFRWC1TQ">
          <body>Wavelength - Frequency</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlLdXSEeqknuIFRWC1TQ" name="W2V">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlLtXSEeqknuIFRWC1TQ">
          <body>Wavelength - Apparent radial velocity</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlL9XSEeqknuIFRWC1TQ" name="W2A">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlMNXSEeqknuIFRWC1TQ">
          <body>Wavelength - Air wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlMdXSEeqknuIFRWC1TQ" name="V2F">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlMtXSEeqknuIFRWC1TQ">
          <body>Apparent radial velocity - Frequency</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlM9XSEeqknuIFRWC1TQ" name="V2W">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlNNXSEeqknuIFRWC1TQ">
          <body>Apparent radial velocity - Wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlNdXSEeqknuIFRWC1TQ" name="V2A">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlNtXSEeqknuIFRWC1TQ">
          <body>Apparent radial velocity - Air wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlN9XSEeqknuIFRWC1TQ" name="A2F">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlONXSEeqknuIFRWC1TQ">
          <body>Air wavelength - Frequency</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlOdXSEeqknuIFRWC1TQ" name="A2W">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlOtXSEeqknuIFRWC1TQ">
          <body>Air wavelength - Wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlO9XSEeqknuIFRWC1TQ" name="A2V">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlPNXSEeqknuIFRWC1TQ">
          <body>Air wavelength - Apparent radial velocity</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlPdXSEeqknuIFRWC1TQ" name="LOG">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlPtXSEeqknuIFRWC1TQ">
          <body>Logarithm</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlP9XSEeqknuIFRWC1TQ" name="GRI">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlQNXSEeqknuIFRWC1TQ">
          <body>Grism</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlQdXSEeqknuIFRWC1TQ" name="GRA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlQtXSEeqknuIFRWC1TQ">
          <body>Grism in air</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_-eKlQ9XSEeqknuIFRWC1TQ" name="SpectralCoordType">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlRNXSEeqknuIFRWC1TQ">
        <body>Enumeration of spectral coordinate types as listed in Table 1 of the FITS WCS paper III.</body>
      </ownedComment>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlRdXSEeqknuIFRWC1TQ" name="FREQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlRtXSEeqknuIFRWC1TQ">
          <body>Frequency</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlR9XSEeqknuIFRWC1TQ" name="ENER">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlSNXSEeqknuIFRWC1TQ">
          <body>Energy</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlSdXSEeqknuIFRWC1TQ" name="WAVN">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlStXSEeqknuIFRWC1TQ">
          <body>Wavenumber</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlS9XSEeqknuIFRWC1TQ" name="VRAD">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlTNXSEeqknuIFRWC1TQ">
          <body>Radio velocity</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlTdXSEeqknuIFRWC1TQ" name="WAVE">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlTtXSEeqknuIFRWC1TQ">
          <body>Vacuum wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlT9XSEeqknuIFRWC1TQ" name="VOPT">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlUNXSEeqknuIFRWC1TQ">
          <body>Optical velocity</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlUdXSEeqknuIFRWC1TQ" name="ZOPT">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlUtXSEeqknuIFRWC1TQ">
          <body>Redshift</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlU9XSEeqknuIFRWC1TQ" name="AWAV">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlVNXSEeqknuIFRWC1TQ">
          <body>Air wavelength</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlVdXSEeqknuIFRWC1TQ" name="VELO">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlVtXSEeqknuIFRWC1TQ">
          <body>Apparent radial velocity</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_-eKlV9XSEeqknuIFRWC1TQ" name="BETA">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlWNXSEeqknuIFRWC1TQ">
          <body>Beta factor (v/c)</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_-eKlWdXSEeqknuIFRWC1TQ" name="coords">
      <packagedElement xmi:type="uml:Class" xmi:id="_-eKlWtXSEeqknuIFRWC1TQ" name="CoordSys" isAbstract="true">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlW9XSEeqknuIFRWC1TQ">
          <body>&lt;Enter note text here&gt;</body>
        </ownedComment>
      </packagedElement>
      <packagedElement xmi:type="uml:InformationItem" xmi:id="_-eKlXNXSEeqknuIFRWC1TQ" name="Coordinates and Coordinate Systems V1.0"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_-eKlXdXSEeqknuIFRWC1TQ" memberEnd="_-eKlbNXSEeqknuIFRWC1TQ _-eKlXtXSEeqknuIFRWC1TQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_-eKlXtXSEeqknuIFRWC1TQ" visibility="public" type="_-eKlZ9XSEeqknuIFRWC1TQ" association="_-eKlXdXSEeqknuIFRWC1TQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKlX9XSEeqknuIFRWC1TQ"/>
        </ownedEnd>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKlYNXSEeqknuIFRWC1TQ" name="TransformSet">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlYdXSEeqknuIFRWC1TQ">
        <body>TransformSet supports the relation of coordinate systems via Mappings.  The design is such that it supports the relation of collections of related coordinates systems by the various mappings between them.  

A single TransformSet can relate a tree of spatial coordinate systems, individual TransNodes can be used as the parent for multiple branches.  For example:
  * pixel - chip - tiled detector - detector - tangent plane
  * chip - chip physical
  * detector - mirror spherical
  * tangent plane - celestial

Each transition is encapsulated by a TransNode instance linking the parent coordinate system of its parent TransNode to the target coordinate system (that of the TransNode) with a Mapping (from the parent to target systems).  
A simple transform from system A to system B requires two TransNodes, one describing system A (with no Mapping), and another describing system B with the Mapping from A to B.
</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlYtXSEeqknuIFRWC1TQ" name="node" visibility="public" type="_-eKlZ9XSEeqknuIFRWC1TQ" aggregation="composite" association="_-eKlZdXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlY9XSEeqknuIFRWC1TQ">
          <body>A node in the transform set, relating a parent and target coordinate system with the corresponding mapping specification.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-eKlZNXSEeqknuIFRWC1TQ" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKlZdXSEeqknuIFRWC1TQ" memberEnd="_-eKlYtXSEeqknuIFRWC1TQ _-eKlZtXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKlZtXSEeqknuIFRWC1TQ" visibility="public" type="_-eKlYNXSEeqknuIFRWC1TQ" association="_-eKlZdXSEeqknuIFRWC1TQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKlZ9XSEeqknuIFRWC1TQ" name="TransNode">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlaNXSEeqknuIFRWC1TQ">
        <body>TransNode is a container object relating a parent coordinate system and a target coordinate system (that of the node) with the mapping relation between them.  The associated Mapping MUST be constructed such that the mapping inputs correspond to the parent coordinate system and the mapping outputs to the target coordinate system.

If either the parent node or mapping is NULL, the other MUST also be NULL.  This forms a 'root' node, containing only the target coordinate system, and serves as an origination node in the TransformSet.

If the target is NULL, the parent and mapping MUST NOT be NULL, additionally such a node MUST NOT be the end point of a node sequence (ie: must be the 'parent' of another node).  This type of node can be useful for cases where the mapping defines the transform to an unspecified intermediate coordinate system, and enables a more efficient and compact structure for the TransformSet by forming a node at this intermediate coordinate system which can serve as the parent for multiple subsequent nodes.  </body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKladXSEeqknuIFRWC1TQ" name="parent" visibility="public" type="_-eKlZ9XSEeqknuIFRWC1TQ" association="_-eKlctXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlatXSEeqknuIFRWC1TQ">
          <body>This identifies the source coordinate system node.  The associated mapping describes the transformation from this parent system to the target system of this node.  Will be NULL for 'root' nodes.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKla9XSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlbNXSEeqknuIFRWC1TQ" name="target" visibility="public" type="_-eKlWtXSEeqknuIFRWC1TQ" association="_-eKlXdXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlbdXSEeqknuIFRWC1TQ">
          <body>This identifies the target coordinate system node.  It is the represenitive coordinate system for this node.  The associated mapping describes the transformation from the parent system of this node to this target system.  The coordinate systems themselves are described in the IVOA "Astronomical Coordinates and Coordinate Systems" model. 
</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKlbtXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlb9XSEeqknuIFRWC1TQ" name="mapping" visibility="public" type="_-eJ9yNXSEeqknuIFRWC1TQ" association="_-eKlddXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlcNXSEeqknuIFRWC1TQ">
          <body>This is a reference to the mapping relating the parent coordinate system to the target system.  Will be NULL for 'root' nodes.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKlcdXSEeqknuIFRWC1TQ"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKlctXSEeqknuIFRWC1TQ" memberEnd="_-eKladXSEeqknuIFRWC1TQ _-eKlc9XSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKlc9XSEeqknuIFRWC1TQ" visibility="public" type="_-eKlZ9XSEeqknuIFRWC1TQ" association="_-eKlctXSEeqknuIFRWC1TQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKldNXSEeqknuIFRWC1TQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKlddXSEeqknuIFRWC1TQ" memberEnd="_-eKlb9XSEeqknuIFRWC1TQ _-eKldtXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKldtXSEeqknuIFRWC1TQ" visibility="public" type="_-eKlZ9XSEeqknuIFRWC1TQ" association="_-eKlddXSEeqknuIFRWC1TQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKld9XSEeqknuIFRWC1TQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKleNXSEeqknuIFRWC1TQ" name="MapRef">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKledXSEeqknuIFRWC1TQ">
        <body>An entry in the CompountMap component mapping list.  Holds a reference to the component mapping.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKletXSEeqknuIFRWC1TQ" name="ref" visibility="public" type="_-eJ9yNXSEeqknuIFRWC1TQ" association="_-eKlfNXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKle9XSEeqknuIFRWC1TQ">
          <body>Reference to the component Mapping.</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKlfNXSEeqknuIFRWC1TQ" memberEnd="_-eKletXSEeqknuIFRWC1TQ _-eKlfdXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKlfdXSEeqknuIFRWC1TQ" visibility="public" type="_-eKleNXSEeqknuIFRWC1TQ" association="_-eKlfNXSEeqknuIFRWC1TQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKlftXSEeqknuIFRWC1TQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-eKlf9XSEeqknuIFRWC1TQ" name="BiDirectionalMap">
      <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlgNXSEeqknuIFRWC1TQ">
        <body>The BiDirectionalMap supports cases where one wants to explicitely define independent transforms for the forward and inverse operations.  This may be because a mapping does not have a analytical inverse, or dictated by the requirements of the application.  The associated mappings do not have to be of the same type.  The forward operation of the BiDirectionalMap is supported by the forward operation of the forwardMap, and the inverse operation of the BiDirectionalMap by the inverse operation of the inverseMap.  If the 'invert' flag is True, this is reversed so that the forward operation of the BiDirectionalMap is supported by the inverse operation of the inverseMap, and the inverse operation of the BiDirectionalMap by the forward operation of the forwardMap.</body>
      </ownedComment>
      <generalization xmi:type="uml:Generalization" xmi:id="_-eKlgdXSEeqknuIFRWC1TQ" general="_-eJ9yNXSEeqknuIFRWC1TQ"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlgtXSEeqknuIFRWC1TQ" name="inverseMap" visibility="public" type="_-eJ9yNXSEeqknuIFRWC1TQ" association="_-eKlhtXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlg9XSEeqknuIFRWC1TQ">
          <body>The Mapping that defines the inverse operation of the BiDirectionalMap. The inverse operation of the target Mapping is used as the inverse operation of the BiDirectionalMap. If the inverse operation of the target Mapping is undefined, then the inverse operation of the BiDirectionalMap is also undefined. The forward operation of the target Mapping is never used and may be undefined.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_-eKlhNXSEeqknuIFRWC1TQ" name="forwardMap" visibility="public" type="_-eJ9yNXSEeqknuIFRWC1TQ" association="_-eKlidXSEeqknuIFRWC1TQ">
        <ownedComment xmi:type="uml:Comment" xmi:id="_-eKlhdXSEeqknuIFRWC1TQ">
          <body>The Mapping that defines the foward operation of the BiDirectionalMap. The forward operation of the target Mapping is used as the foward operation of the BiDirectionalMap. If the forward operation of the target Mapping is undefined, then the forward operation of the BiDirectionalMap is also undefined. The inverse operation of the target Mapping is never used and need not be defined.
</body>
        </ownedComment>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKlhtXSEeqknuIFRWC1TQ" memberEnd="_-eKlgtXSEeqknuIFRWC1TQ _-eKlh9XSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKlh9XSEeqknuIFRWC1TQ" visibility="public" type="_-eKlf9XSEeqknuIFRWC1TQ" association="_-eKlhtXSEeqknuIFRWC1TQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKliNXSEeqknuIFRWC1TQ"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_-eKlidXSEeqknuIFRWC1TQ" memberEnd="_-eKlhNXSEeqknuIFRWC1TQ _-eKlitXSEeqknuIFRWC1TQ">
      <ownedEnd xmi:type="uml:Property" xmi:id="_-eKlitXSEeqknuIFRWC1TQ" visibility="public" type="_-eKlf9XSEeqknuIFRWC1TQ" association="_-eKlidXSEeqknuIFRWC1TQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-eKli9XSEeqknuIFRWC1TQ"/>
      </ownedEnd>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:applyingPackage="_-eJ9wNXSEeqknuIFRWC1TQ" xmi:id="_-iAjANXSEeqknuIFRWC1TQ">
      <eAnnotations xmi:id="_-iBxINXSEeqknuIFRWC1TQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="IVOA_UML_Profile.profile.xmi#_-fWQl9XSEeqknuIFRWC1TQ"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" xmi:applyingPackage="_-iAjANXSEeqknuIFRWC1TQ" href="IVOA_UML_Profile.profile.xmi#_-fWQkNXSEeqknuIFRWC1TQ"/>
    </profileApplication>
  </uml:Model>
  <IVOA_UML_Profile:model xmi:id="_-iIe0NXSEeqknuIFRWC1TQ" base_Element="_-eJ9wNXSEeqknuIFRWC1TQ" title="WCS Transform Model" version="1.0" authors="Arnold Rots, Mark Cresitello-Dittmar, David Berry, Steven Crawford, Nadia Dencheva, Tim Jenness, Omar Laurino, Stuart Mumford, Erik Tollerud" previousVersion="0.0"/>
  <IVOA_UML_Profile:modelimport xmi:id="_-iJF4NXSEeqknuIFRWC1TQ" base_Element="_-eKlDNXSEeqknuIFRWC1TQ" name="ivoa" version="1.0" url="http://www.ivoa.net/xml/VODML/20180519/IVOA-v1.0.vo-dml.xml" documentationURL="http://volute.g-vo.org/svn/trunk/projects/dm/vo-dml/models/ivoa/vo-dml/IVOA-v1.0.html"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iJF4dXSEeqknuIFRWC1TQ" base_Element="_-eKlDdXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iJF4tXSEeqknuIFRWC1TQ" base_Element="_-eKlDdXSEeqknuIFRWC1TQ" vodmlid="real"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iJF49XSEeqknuIFRWC1TQ" base_Element="_-eKlDtXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iJs8NXSEeqknuIFRWC1TQ" base_Element="_-eKlDtXSEeqknuIFRWC1TQ" vodmlid="datetime"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iJs8dXSEeqknuIFRWC1TQ" base_Element="_-eKlD9XSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iJs8tXSEeqknuIFRWC1TQ" base_Element="_-eKlD9XSEeqknuIFRWC1TQ" vodmlid="anyURI"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iJs89XSEeqknuIFRWC1TQ" base_Element="_-eKlEdXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iJs9NXSEeqknuIFRWC1TQ" base_Element="_-eKlEdXSEeqknuIFRWC1TQ" vodmlid="string"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iKUANXSEeqknuIFRWC1TQ" base_Element="_-eKlEtXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iKUAdXSEeqknuIFRWC1TQ" base_Element="_-eKlEtXSEeqknuIFRWC1TQ" vodmlid="nonnegativeInteger"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iKUAtXSEeqknuIFRWC1TQ" base_Element="_-eKlE9XSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iKUA9XSEeqknuIFRWC1TQ" base_Element="_-eKlE9XSEeqknuIFRWC1TQ" vodmlid="boolean"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iK7ENXSEeqknuIFRWC1TQ" base_Element="_-eKlFNXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iK7EdXSEeqknuIFRWC1TQ" base_Element="_-eKlFNXSEeqknuIFRWC1TQ" vodmlid="integer"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iK7EtXSEeqknuIFRWC1TQ" base_Element="_-eKlFdXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iK7E9XSEeqknuIFRWC1TQ" base_Element="_-eKlFdXSEeqknuIFRWC1TQ" vodmlid="rational"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iLiINXSEeqknuIFRWC1TQ" base_Element="_-eKlFtXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iLiIdXSEeqknuIFRWC1TQ" base_Element="_-eKlFtXSEeqknuIFRWC1TQ" vodmlid="complex"/>
  <IVOA_UML_Profile:primitive xmi:id="_-iLiItXSEeqknuIFRWC1TQ" base_Element="_-eKlGNXSEeqknuIFRWC1TQ"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iLiI9XSEeqknuIFRWC1TQ" base_Element="_-eKlGNXSEeqknuIFRWC1TQ" vodmlid="quantity.Unit"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iMJMNXSEeqknuIFRWC1TQ" base_Element="_-eKlGtXSEeqknuIFRWC1TQ" vodmlid="quantity.Quantity"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iMJMdXSEeqknuIFRWC1TQ" base_Element="_-eKlHdXSEeqknuIFRWC1TQ" vodmlid="quantity.IntegerQuantity"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iMJMtXSEeqknuIFRWC1TQ" base_Element="_-eKlINXSEeqknuIFRWC1TQ" vodmlid="quantity.RealQuantity"/>
  <IVOA_UML_Profile:modelimport xmi:id="_-iMwQNXSEeqknuIFRWC1TQ" base_Element="_-eKlWdXSEeqknuIFRWC1TQ" name="coords" version="1.0" url="https://volute.g-vo.org/svn/trunk/projects/dm/STC/Coords/vo-dml/STC_coords-v1.0.vo-dml.xml" documentationURL="https://volute.g-vo.org/svn/trunk/projects/dm/STC/Coords/vo-dml/STC_coords-v1.0.html"/>
  <IVOA_UML_Profile:modelelement xmi:id="_-iMwQdXSEeqknuIFRWC1TQ" base_Element="_-eKlWtXSEeqknuIFRWC1TQ" vodmlid="CoordSys"/>
</xmi:XMI>
